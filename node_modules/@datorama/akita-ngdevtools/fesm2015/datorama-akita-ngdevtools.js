import { InjectionToken, NgModule, NgZone, Optional, Inject } from '@angular/core';
import { akitaDevtools } from '@datorama/akita';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DEVTOOLS_OPTIONS = new InjectionToken('DevtoolsOptions');
class AkitaNgDevtools {
    /**
     * @param {?} ngZone
     * @param {?} options
     */
    constructor(ngZone, options) {
        this.ngZone = ngZone;
        this.options = options;
        akitaDevtools(this.ngZone, this.options || {});
    }
}
AkitaNgDevtools.decorators = [
    { type: NgModule, args: [{},] }
];
/** @nocollapse */
AkitaNgDevtools.ctorParameters = () => [
    { type: NgZone },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DEVTOOLS_OPTIONS,] }] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    AkitaNgDevtools.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    AkitaNgDevtools.prototype.options;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AkitaNgDevtools, DEVTOOLS_OPTIONS };
//# sourceMappingURL=datorama-akita-ngdevtools.js.map
