(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@datorama/akita')) :
    typeof define === 'function' && define.amd ? define('@datorama/akita-ngdevtools', ['exports', '@angular/core', '@datorama/akita'], factory) :
    (global = global || self, factory((global.datorama = global.datorama || {}, global.datorama['akita-ngdevtools'] = {}), global.ng.core, global.akita));
}(this, (function (exports, core, akita) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var DEVTOOLS_OPTIONS = new core.InjectionToken('DevtoolsOptions');
    var AkitaNgDevtools = /** @class */ (function () {
        function AkitaNgDevtools(ngZone, options) {
            this.ngZone = ngZone;
            this.options = options;
            akita.akitaDevtools(this.ngZone, this.options || {});
        }
        AkitaNgDevtools.decorators = [
            { type: core.NgModule, args: [{},] }
        ];
        /** @nocollapse */
        AkitaNgDevtools.ctorParameters = function () { return [
            { type: core.NgZone },
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [DEVTOOLS_OPTIONS,] }] }
        ]; };
        return AkitaNgDevtools;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        AkitaNgDevtools.prototype.ngZone;
        /**
         * @type {?}
         * @private
         */
        AkitaNgDevtools.prototype.options;
    }

    exports.AkitaNgDevtools = AkitaNgDevtools;
    exports.DEVTOOLS_OPTIONS = DEVTOOLS_OPTIONS;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=datorama-akita-ngdevtools.umd.js.map
